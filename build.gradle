buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

def buildnumber = System.getenv("BUILD_NUMBER") == null ? "" : "-"+System.getenv("BUILD_NUMBER")
version = "1.7.10-0.3g"+buildnumber
group = "org.jackhuang.watercraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "WaterPower"

/*ic2_version="2.2.628-experimental"
buildcraft_version="6.0.17"
gregtech_version="5.05.10"*/

minecraft {
    version = "1.7.10-10.13.0.1208"
    assetDir = "eclipse/assets"
}

dependencies {
    /*compile "net.industrial-craft:industrialcraft-2:${config.ic2_version}:api"
    compile "com.mod-buildcraft:buildcraft:${config.buildcraft_version}:dev"
    compile "com.gregoriust.gregtech:gregtech_${config.minecraft_version}:${config.gregtech_version}:dev"*/
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = "sources"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = "dev"
}

build.dependsOn sourceJar, deobfJar

artifacts {
    archives sourceJar
    archives deobfJar
}

/*

uploadArchives {
    dependsOn 'reobf'

    repositories {
        mavenDeployer {
            repository(url: uri(''))
        }
    }
}*/
